{"version":3,"sources":["images/authors/jkrowling.jpg","images/authors/stephenking.jpg","images/authors/charlesdickens.jpg","images/authors/josephconrad.jpg","images/authors/marktwain.jpg","images/authors/williamshakespeare.jpg","AuthorQuiz.js","AddAuthorForm.js","index.js"],"names":["Hero","className","Book","title","onClick","Turn","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBgColor","src","imageUrl","alt","map","Continue","show","onContinue","Footer","id","href","AuthorQuiz","connect","state","turnData","dispatch","answer","type","to","AuthorForm","props","name","bookTemp","onFieldChange","bind","handleSubmit","handleAddBook","event","preventDefault","this","onAddAuthor","setState","concat","target","value","onSubmit","htmlFor","onChange","book","React","Component","withRouter","history","push","match","authors","jkrowling","imageSource","imageAttribution","stephenking","charlesdickens","josephconrad","marktwain","williamshakespeare","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","sample","find","some","store","Redux","action","isCorrect","Object","assign","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","Fragment","exact","path","component","AddAuthorForm","document","getElementById"],"mappings":"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","file":"static/js/main.3306fd3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/jkrowling.e3baa56f.jpg\";","export default __webpack_public_path__ + \"static/media/stephenking.3abf56be.jpg\";","export default __webpack_public_path__ + \"static/media/charlesdickens.84798f14.jpg\";","export default __webpack_public_path__ + \"static/media/josephconrad.854fe46f.jpg\";","export default __webpack_public_path__ + \"static/media/marktwain.1939b8d0.jpg\";","export default __webpack_public_path__ + \"static/media/williamshakespeare.3ad45bbf.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport './bootstrap.min.css';\n\nfunction Hero() {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by the author shown</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Book({ title, onClick }) {\n  return (\n    <div\n      className=\"answer\"\n      onClick={() => {\n        onClick(title);\n      }}\n    >\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Turn({ author, books, highlight, onAnswerSelected }) {\n  function highlightToBgColor(highlight) {\n    const mapping = {\n      none: '',\n      correct: 'green',\n      wrong: 'red',\n    };\n    return mapping[highlight];\n  }\n\n  return (\n    <div\n      className=\"row turn\"\n      style={{ backgroundColor: highlightToBgColor(highlight) }}\n    >\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"authorimage\" alt=\"Author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map(title => (\n          <Book title={title} key={title} onClick={onAnswerSelected} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nTurn.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource: PropTypes.string.isRequired,\n    books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }),\n  books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  highlight: PropTypes.string.isRequired,\n};\n\nfunction Continue({ show, onContinue }) {\n  return (\n    <div className=\"row continue\">\n      {show ? (\n        <div className=\"col-11\">\n          <button\n            className=\"btn btn-primary btn-lg float-right\"\n            onClick={onContinue}\n          >\n            Continue\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Footer() {\n  return (\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credit\">\n          All images are from{' '}\n          <a href=\"https://commons.wikimedia.org/wiki/Main_Page\">\n            Wikimedia Commons\n          </a>\n          &nbsp;and are in the public domain\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    turnData: state.turnData,\n    highlight: state.highlight,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAnswerSelected: answer => {\n      dispatch({ type: 'ANSWER_SELECTED', answer });\n    },\n    onContinue: () => {\n      dispatch({ type: 'CONTINUE' });\n    },\n  };\n}\n\nconst AuthorQuiz = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(function({ turnData, highlight, onAnswerSelected, onContinue }) {\n  return (\n    <div className=\"container-fluid\">\n      <Hero />\n      <Turn\n        {...turnData}\n        highlight={highlight}\n        onAnswerSelected={onAnswerSelected}\n      />\n      <Continue show={highlight === 'correct'} onContinue={onContinue} />\n      <p>\n        <Link to=\"/add\">Add an author</Link>\n      </p>\n      <Footer />\n    </div>\n  );\n});\n\nexport default AuthorQuiz;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './AddAuthorForm.css';\n\nclass AuthorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      imageUrl: '',\n      books: [],\n      bookTemp: '',\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAddBook = this.handleAddBook.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onAddAuthor(this.state);\n  }\n\n  handleAddBook(event) {\n    this.setState({\n      books: this.state.books.concat([this.state.bookTemp]),\n      bookTemp: '',\n    });\n  }\n\n  onFieldChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"AddAuthorForm__input\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onFieldChange}\n          />\n        </div>\n        <div className=\"AddAuthorForm__input\">\n          <label htmlFor=\"imageUrl\">Image URL</label>\n          <input\n            type=\"text\"\n            name=\"imageUrl\"\n            value={this.state.imageUrl}\n            onChange={this.onFieldChange}\n          />\n        </div>\n        <div className=\"AddAuthorForm__input\">\n          <label htmlFor=\"bookTemp\">Books</label>\n          {this.state.books.map(book => (\n            <p key={book}>{book}</p>\n          ))}\n          <input\n            type=\"text\"\n            name=\"bookTemp\"\n            value={this.state.bookTemp}\n            onChange={this.onFieldChange}\n          />\n          <input type=\"button\" value=\"+\" onClick={this.handleAddBook} />\n        </div>\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n\nfunction AddAuthorForm({ match, onAddAuthor }) {\n  return (\n    <div className=\"AddAuthorForm\">\n      <h1>Add Author</h1>\n      <AuthorForm onAddAuthor={onAddAuthor} />\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    onAddAuthor: author => {\n      dispatch({ type: 'ADD_AUTHOR', author });\n      props.history.push('/');\n    },\n  };\n}\n\nexport default withRouter(\n  connect(\n    () => {},\n    mapDispatchToProps,\n  )(AddAuthorForm),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\nimport './index.css';\nimport jkrowling from './images/authors/jkrowling.jpg';\nimport stephenking from './images/authors/stephenking.jpg';\nimport charlesdickens from './images/authors/charlesdickens.jpg';\nimport josephconrad from './images/authors/josephconrad.jpg';\nimport marktwain from './images/authors/marktwain.jpg';\nimport williamshakespeare from './images/authors/williamshakespeare.jpg';\nimport AuthorQuiz from './AuthorQuiz';\nimport AddAuthorForm from './AddAuthorForm';\nimport { shuffle, sample } from 'underscore';\n\nconst authors = [\n  {\n    name: 'J.K. Rowling',\n    imageUrl: jkrowling,\n    imageSource: 'Wikimedia Commons',\n    imageAttribution: 'Daniel Ogren',\n    books: ['Harry Potter and the Sorcerers Stone'],\n  },\n  {\n    name: 'Stephen King',\n    imageUrl: stephenking,\n    imageSource: 'Wikimedia Commons',\n    imageAttribution: 'Pinguino',\n    books: ['The Shining', 'IT'],\n  },\n  {\n    name: 'Charles Dickens',\n    imageUrl: charlesdickens,\n    imageSource: 'Wikimedia Commons',\n    books: ['David Copperfield', 'A Tale of Two Cities'],\n  },\n  {\n    name: 'Joseph Conrad',\n    imageUrl: josephconrad,\n    imageSource: 'Wikimedia Commons',\n    books: ['Heart of Darkness'],\n  },\n  {\n    name: 'Mark Twain',\n    imageUrl: marktwain,\n    imageSource: 'Wikimedia Commons',\n    books: [\n      'The Adventures of Huckleberry Finn',\n      'The Adventures of Tom Sawyer',\n      'A Connecticut Yankee in King Arthurs Court',\n      'The Prince and the Pauper',\n      'Life on the Mississippi',\n      'Roughing It',\n    ],\n  },\n  {\n    name: 'William Shakespeare',\n    imageUrl: williamshakespeare,\n    imageSource: 'Wikimedia Commons',\n    books: ['Hamlet', 'Macbeth', 'Romeo and Juliet'],\n  },\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    author: authors.find((author) =>\n      author.books.some((title) => title === answer),\n    ),\n  };\n}\n\nfunction reducer(\n  state = { authors, turnData: getTurnData(authors), highlight: '' },\n  action,\n) {\n  switch (action.type) {\n    case 'ANSWER_SELECTED':\n      const isCorrect = state.turnData.author.books.some(\n        (book) => book === action.answer,\n      );\n      return Object.assign({}, state, {\n        highlight: isCorrect ? 'correct' : 'wrong',\n      });\n    case 'CONTINUE':\n      return Object.assign({}, state, {\n        highlight: '',\n        turnData: getTurnData(state.authors),\n      });\n    case 'ADD_AUTHOR':\n      return Object.assign({}, state, {\n        authors: state.authors.concat([action.author]),\n      });\n    default:\n      return state;\n  }\n}\n\nlet store = Redux.createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <ReactRedux.Provider store={store}>\n      <React.Fragment>\n        <Route exact path=\"/\" component={AuthorQuiz} />\n        <Route path=\"/add\" component={AddAuthorForm} />\n      </React.Fragment>\n    </ReactRedux.Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}