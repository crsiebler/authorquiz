{"version":3,"sources":["AuthorQuiz.js","AddAuthorForm.js","serviceWorker.js","index.js"],"names":["Hero","className","Book","title","onClick","Turn","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBgColor","src","imageUrl","alt","map","key","Continue","show","onContinue","Footer","id","href","AuthorQuiz","connect","state","turnData","dispatch","answer","type","to","AuthorForm","props","name","bookTemp","onFieldChange","bind","handleSubmit","handleAddBook","event","preventDefault","this","onAddAuthor","setState","concat","target","value","onSubmit","htmlFor","onChange","book","React","Component","withRouter","history","push","match","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","authors","imageSource","imageAttribution","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","sample","find","some","store","Redux","action","isCorrect","Object","assign","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","Fragment","exact","path","component","AddAuthorForm","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.502a97f9.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport './bootstrap.min.css';\n\nfunction Hero() {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by the author shown</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Book({ title, onClick }) {\n  return (\n    <div\n      className=\"answer\"\n      onClick={() => {\n        onClick(title);\n      }}\n    >\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Turn({ author, books, highlight, onAnswerSelected }) {\n  function highlightToBgColor(highlight) {\n    const mapping = {\n      none: '',\n      correct: 'green',\n      wrong: 'red',\n    };\n    return mapping[highlight];\n  }\n\n  return (\n    <div\n      className=\"row turn\"\n      style={{ backgroundColor: highlightToBgColor(highlight) }}\n    >\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"authorimage\" alt=\"Author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map(title => (\n          <Book title={title} key={title} onClick={onAnswerSelected} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nTurn.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource: PropTypes.string.isRequired,\n    books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }),\n  books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  highlight: PropTypes.string.isRequired,\n};\n\nfunction Continue({ show, onContinue }) {\n  return (\n    <div className=\"row continue\">\n      {show ? (\n        <div className=\"col-11\">\n          <button\n            className=\"btn btn-primary btn-lg float-right\"\n            onClick={onContinue}\n          >\n            Continue\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Footer() {\n  return (\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credit\">\n          All images are from{' '}\n          <a href=\"https://commons.wikimedia.org/wiki/Main_Page\">\n            Wikimedia Commons\n          </a>\n          &nbsp;and are in the public domain\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    turnData: state.turnData,\n    highlight: state.highlight,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAnswerSelected: answer => {\n      dispatch({ type: 'ANSWER_SELECTED', answer });\n    },\n    onContinue: () => {\n      dispatch({ type: 'CONTINUE' });\n    },\n  };\n}\n\nconst AuthorQuiz = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(function({ turnData, highlight, onAnswerSelected, onContinue }) {\n  return (\n    <div className=\"container-fluid\">\n      <Hero />\n      <Turn\n        {...turnData}\n        highlight={highlight}\n        onAnswerSelected={onAnswerSelected}\n      />\n      <Continue show={highlight === 'correct'} onContinue={onContinue} />\n      <p>\n        <Link to=\"/add\">Add an author</Link>\n      </p>\n      <Footer />\n    </div>\n  );\n});\n\nexport default AuthorQuiz;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './AddAuthorForm.css';\n\nclass AuthorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      imageUrl: '',\n      books: [],\n      bookTemp: '',\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAddBook = this.handleAddBook.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onAddAuthor(this.state);\n  }\n\n  handleAddBook(event) {\n    this.setState({\n      books: this.state.books.concat([this.state.bookTemp]),\n      bookTemp: '',\n    });\n  }\n\n  onFieldChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"AddAuthorForm__input\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onFieldChange}\n          />\n        </div>\n        <div className=\"AddAuthorForm__input\">\n          <label htmlFor=\"imageUrl\">Image URL</label>\n          <input\n            type=\"text\"\n            name=\"imageUrl\"\n            value={this.state.imageUrl}\n            onChange={this.onFieldChange}\n          />\n        </div>\n        <div className=\"AddAuthorForm__input\">\n          <label htmlFor=\"bookTemp\">Books</label>\n          {this.state.books.map(book => (\n            <p key={book}>{book}</p>\n          ))}\n          <input\n            type=\"text\"\n            name=\"bookTemp\"\n            value={this.state.bookTemp}\n            onChange={this.onFieldChange}\n          />\n          <input type=\"button\" value=\"+\" onClick={this.handleAddBook} />\n        </div>\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n\nfunction AddAuthorForm({ match, onAddAuthor }) {\n  return (\n    <div className=\"AddAuthorForm\">\n      <h1>Add Author</h1>\n      <AuthorForm onAddAuthor={onAddAuthor} />\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    onAddAuthor: author => {\n      dispatch({ type: 'ADD_AUTHOR', author });\n      props.history.push('/');\n    },\n  };\n}\n\nexport default withRouter(\n  connect(\n    () => {},\n    mapDispatchToProps,\n  )(AddAuthorForm),\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport AddAuthorForm from './AddAuthorForm';\nimport * as serviceWorker from './serviceWorker';\nimport { shuffle, sample } from 'underscore';\n\nconst authors = [\n  {\n    name: 'J.K. Rowling',\n    imageUrl: 'images/authors/jkrowling.jpg',\n    imageSource: 'Wikimedia Commons',\n    imageAttribution: 'Daniel Ogren',\n    books: ['Harry Potter and the Sorcerers Stone'],\n  },\n  {\n    name: 'Stephen King',\n    imageUrl: 'images/authors/stephenking.jpg',\n    imageSource: 'Wikimedia Commons',\n    imageAttribution: 'Pinguino',\n    books: ['The Shining', 'IT'],\n  },\n  {\n    name: 'Charles Dickens',\n    imageUrl: 'images/authors/charlesdickens.jpg',\n    imageSource: 'Wikimedia Commons',\n    books: ['David Copperfield', 'A Tale of Two Cities'],\n  },\n  {\n    name: 'Joseph Conrad',\n    imageUrl: 'images/authors/josephconrad.jpg',\n    imageSource: 'Wikimedia Commons',\n    books: ['Heart of Darkness'],\n  },\n  {\n    name: 'Mark Twain',\n    imageUrl: 'images/authors/marktwain.jpg',\n    imageSource: 'Wikimedia Commons',\n    books: [\n      'The Adventures of Huckleberry Finn',\n      'The Adventures of Tom Sawyer',\n      'A Connecticut Yankee in King Arthurs Court',\n      'The Prince and the Pauper',\n      'Life on the Mississippi',\n      'Roughing It',\n    ],\n  },\n  {\n    name: 'William Shakespeare',\n    imageUrl: 'images/authors/williamshakespeare.jpg',\n    imageSource: 'Wikimedia Commons',\n    books: ['Hamlet', 'Macbeth', 'Romeo and Juliet'],\n  },\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    author: authors.find((author) =>\n      author.books.some((title) => title === answer),\n    ),\n  };\n}\n\nfunction reducer(\n  state = { authors, turnData: getTurnData(authors), highlight: '' },\n  action,\n) {\n  switch (action.type) {\n    case 'ANSWER_SELECTED':\n      const isCorrect = state.turnData.author.books.some(\n        (book) => book === action.answer,\n      );\n      return Object.assign({}, state, {\n        highlight: isCorrect ? 'correct' : 'wrong',\n      });\n    case 'CONTINUE':\n      return Object.assign({}, state, {\n        highlight: '',\n        turnData: getTurnData(state.authors),\n      });\n    case 'ADD_AUTHOR':\n      return Object.assign({}, state, {\n        authors: state.authors.concat([action.author]),\n      });\n    default:\n      return state;\n  }\n}\n\nlet store = Redux.createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <ReactRedux.Provider store={store}>\n      <React.Fragment>\n        <Route exact path=\"/\" component={AuthorQuiz} />\n        <Route path=\"/add\" component={AddAuthorForm} />\n      </React.Fragment>\n    </ReactRedux.Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}